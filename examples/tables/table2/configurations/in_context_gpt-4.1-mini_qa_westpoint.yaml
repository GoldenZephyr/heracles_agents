configurations:
  in_context_gpt-4.1-mini_qa_westpoint:
    dsg_interface:
      dsg_filepath: $HERACLES_EVALUATION_PATH/examples/scene_graphs/west_point_fused_map_wregions_labelspace.json
      dsg_interface_type: in_context
    phases:
      main:
        agent_info:
          max_iterations: 1
          prompt_settings:
            base_prompt:
              answer_formatting_guidance: Use a series of steps to formulate your
                final answer in a chain of thought style. Put your answer between
                the XML tags <answer> answer goes here </answer>. Do not include more
                than one pair of answer tags.
              answer_semantic_guidance: null
              in_context_examples:
              - assistant: tree
                system: null
                user: What is the most common object type?
              - assistant: <tree, vehicle, door, boat, seating>
                system: null
                user: What are the object types?
              - assistant: '{tree: 3, vehicle: 2, door: 1, boat: 1, seating: 1}'
                system: null
                user: How many of each object are there?
              - assistant: '3'
                system: null
                user: How many regions are there?
              - assistant: <courtyard, parking_lot, dock>
                system: null
                user: What region types are present?
              in_context_examples_preamble: 'Here are some examples of mapping from
                natural language instructions to grounded objects. Each example uses
                the 3D scene graph below. Note that this 3D scene graph is just for
                these examples and you should NOT use this when answering the new
                instruction. <Example 3D Scene Graph> Objects: - (id=O0, type=tree,
                pos=(-3.14,1.132), parent_region=R0) - (id=O1, type=vehicle, pos=(3.346,3.531),
                parent_region=R0) - (id=O2, type=door, pos=(3.335,3.482), parent_region=R0)
                - (id=O3, type=tree, pos=(4.475,-4.72), parent_region=R2) - (id=O4,
                type=vehicle, pos=(-2.51,6.63), parent_region=R1) - (id=O5, type=boat,
                pos=(1.34,3.28), parent_region=R1) - (id=O6, type=seating, pos=(1.37,3.03),
                parent_region=R1) - (id=O7, type=tree, pos=(9.1,-2.01), parent_region=R2)
                Regions: - (id=R0, type=parking_lot) - (id=R1, type=dock) - (id=R2,
                type=courtyard) </Example 3D Scene Graph> '
              novel_instruction: null
              novel_instruction_preamble: Here is a new 3D Scene graph and a new query
                for you to ground.
              novel_instruction_template: '{dsg_description}\n Question to answer:
                {question}'
              system: 'Your task is to map from natural language instructions to symbols
                in a 3D world representation. You will be provided with a description
                of the world known as a 3D Scene Graph. Below is a description of
                3D scene graphs (delimited by XML tags: <Scene Graph Description>
                description of 3D Scene Graphs </Scene Graph Description>).

                <Scene Graph Description> A 3D scene graph is a hierarchical graph
                consisting of 3 layers that each contain nodes: the 2D Place layer,
                the Object layer, and the Region layer. 2D Place Layer: The 2D Place
                layer contains Places that are reachable locations in the world. Each
                Place node has a unique ID. Object Layer: The Object layer contains
                Objects that exist in the world. Each Object has a unique ID (id),
                a semantic class (type), an x,y position (pos), and a parent Region
                (parent_region). The parent Region indicates which Region the Object
                belongs to. Each Object will be represented in the form: (id, type,
                pose, parent_region). Region Layer: The Region Layer contains Regions
                that exist in the world. Each Region has a unique ID and a semantic
                class. Each Region will be represented in the form: (id, type). </Scene
                Graph Description>

                Given a 3D Scene Graph and a query, you must generate an answer based
                on elements of the scene graph. '
              tool_description: null
            output_type: SLDP
            sldp_answer_type_hint: true
          tool_interface: openai
          tools: []
        client:
          client_type: openai
          timeout: 120
        model_info:
          model: gpt-4.1-mini
          seed: null
          temperature: 0.2
    pipeline: feedforward_in_context
    questions:
    - correctness_comparator:
        comparison_type: SLDP
        relation: equal
      name: Distinct Classes
      question: What are the distinct object classes?
      solution: <tree, fence, vehicle, seating, window, sign, pole, door, box, trash,
        rock, bag>
    - correctness_comparator:
        comparison_type: SLDP
        relation: equal
      name: Distinct Counts
      question: How many of each object type are there?
      solution: '{tree: 163, fence: 17, vehicle: 26, seating: 9, window: 1, sign:
        6, pole: 21, door: 3, box: 4, trash: 1, rock: 62, bag: 1}'
    - correctness_comparator:
        comparison_type: SLDP
        relation: equal
      name: Sign Locations
      question: Give me the location of all signs in the scene graph
      solution: "<POINT(-8.284313559532166 -14.206965416035754 1.9744174981370886),\n\
        \ POINT(-30.409549247386845 -15.735817166261894 1.419422089360481),\n POINT(-29.527192555941067\
        \ -11.574765984828655 1.4839779872160692),\n POINT(-29.246166506680574 -8.68991950641979\
        \ 1.4494154886765913),\n POINT(-29.16052139096144 -7.293464509452262 1.556024234469344),\n\
        \ POINT(-69.23055948529925 83.1722952524821 0.790333880555062)>\n"
    - correctness_comparator:
        comparison_type: SLDP
        relation: equal
      name: Objects Near Point
      question: What object node symbols are within 10 meters of x:-100, y:16, z:0?
      solution: <O370, O371, O372, O373>
    - correctness_comparator:
        comparison_type: SLDP
        relation: equal
      name: MeshPlaces within 5 hops
      question: How many mesh places are within 5 hops of mesh place P1832 (not including
        the starting place).
      solution: '141'
    - correctness_comparator:
        comparison_type: SLDP
        relation: equal
      name: Objects in Rooms
      question: What kinds of objects are in Room R91
      solution: <tree, window, pole>
metadata:
  config_name: in_context_gpt-4.1-mini_qa_westpoint
  dsg_tag: westpoint
