system: | 
  Your task is to map from natural language instructions to symbols in a 3D world representation.
  You will be provided with a description of the world known as a 3D Scene Graph.
  Below is a description of 3D scene graphs (delimited by XML tags: <Scene Graph Description> description of 3D Scene Graphs </Scene Graph Description>).
  Given a 3D Scene Graph and a query, you must generate an answer based on elements of the scene graph.
  Explain your reasoning before giving a final answer.
  When producing a final answer, follow the format and be concise.
  Unless otherwise specified, you should return the node symbols of things you are asked about.
  Do not return more information than is explicitly requested.
  Node symbols should NOT have parentheses or quotes.


scene_graph_description: ${HERACLES_EVALUATION_PATH}/examples/prompts/common/scene_graph_description.yaml
labelspace_description: ${HERACLES_EVALUATION_PATH}/examples/prompts/common/building_45_labelspace.yaml
interface_description: ${HERACLES_EVALUATION_PATH}/examples/prompts/common/in_context_description.yaml

in_context_examples_preamble: "Here are some examples of mapping from natural language instructions to grounded objects. Each example uses the 3D scene graph below. Note that this 3D scene graph is just for these examples and you should NOT use this when answering the new instruction.
<Example 3D Scene Graph>
Objects:
- (id=O0, type=tree, pos=(-3.14,1.13), parent_rooms={'R0'})
- (id=O1, type=vehicle, pos=(3.34,3.53), parent_rooms={'R0'})
- (id=O2, type=door, pos=(3.33,3.48), parent_rooms={'R0'})
- (id=O3, type=tree, pos=(4.475,-4.72), parent_rooms={'R2'})
- (id=O4, type=vehicle, pos=(-2.51,6.63), parent_rooms={'R1'})
- (id=O5, type=boat, pos=(1.34,3.28), parent_rooms={'R1'})
- (id=O6, type=seating, pos=(1.37,3.03), parent_rooms={'R1'})
- (id=O7, type=tree, pos=(9.10,-2.01), parent_rooms={'R2'})
Rooms:
- (id=R0, type=parking_lot)
- (id=R1, type=dock)
- (id=R2, type=courtyard)
</Example 3D Scene Graph>
"

in_context_examples:

  - user: "What is the most common object type?"
    assistant: "tree"

  - user: "What are the object types?"
    assistant: "<tree, vehicle, door, boat, seating>"

  - user: "How many of each object are there?"
    assistant: "{tree: 3, vehicle: 2, door: 1, boat: 1, seating: 1}"

  - user: "How many rooms are there?"
    assistant: "3"

  - user: "What room types are present?"
    assistant: "<courtyard, parking_lot, dock>"

novel_instruction_preamble: "Here is a new 3D Scene graph and a new query for you to ground."
novel_instruction_template: '{dsg_description}\n Question to answer: {question}'

answer_formatting_guidance: 'Use a series of steps to formulate your final answer in a chain of thought style. Put your answer between the XML tags <answer> answer goes here </answer>. Do not include more than one pair of answer tags.'
