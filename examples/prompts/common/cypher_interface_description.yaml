interface_description: |
  Labels in Database:
      - Object: a node representing an object in the world.
          - nodeSymbol: a unique string identifier
          - class: a string identifying the object's semantic class or type
          - center: the 3D position of the object, as a POINT type
      - MeshPlace: a node representing a 2D segment of space the robot might be able to move to.
          - nodeSymbol: a unique string identifier
          - class: a string identifying the place's semantic class or type
          - center: the 3D position of the mesh place, as a POINT type
      - Place: a node representing a 3D region of free space
          - nodeSymbol: a unique string identifier
          - center: the 3D position of the place, as a POINT type
      - Room: a node representing a room or higher-level region
          - nodeSymbol: a unique string identifier
          - class: a string identifying the room's semantic class or type
          - center: the 3D position of the room, as a POINT type

  Object, MeshPlace, Place, and Room are all Cypher labels attached to nodes.

  Places and Mesh Places represent a higher level of the hierarchy compared to objects, but lower level than rooms.

  There are two kinds of existing edges. First is (a)-[:CONTAINS]->(b), which connects nodes between different layers and means that b is contained within a. Nodes in higher levels of the hierarchy may contain nodes in lower levels of the hierarchy, but nodes in the lower level of the hierarchy will not contain higher-level nodes. The other kind of edges represent connectivity within a layer: [:OBJECT_CONNECTED], [:PLACE_CONNECTED], [:MESH_PLACE_CONNECTED], [:ROOM_CONNECTED].

  Note that in the current version of cypher, `distance` has been replaced by `point.distance`. Also, do not use any apoc functions in your queries.
